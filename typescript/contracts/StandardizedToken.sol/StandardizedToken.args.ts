/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * This file was generated by scripts/codegen.ts
 *
 * Original abi file:
 * - dist/StandardizedToken.sol/StandardizedToken.sol/StandardizedToken.json
 *
 * DO NOT EDIT MANUALLY
 */

import { encodeFunctionData } from "viem";

import ABI_FILE from "./StandardizedToken.abi";

export type StandardizedTokenApproveArgs = {
  spender: `0x${string}`;
  amount: bigint;
};

/**
 * Factory function for StandardizedToken.approve function args
 */
export const encodeStandardizedTokenApproveArgs = ({
  spender,
  amount,
}: StandardizedTokenApproveArgs) => [spender, amount] as const;

/**
 * Encoder function for StandardizedToken.approve function data
 */
export const encodeStandardizedTokenApproveData = ({
  spender,
  amount,
}: StandardizedTokenApproveArgs) =>
  encodeFunctionData({
    functionName: "approve",
    abi: ABI_FILE.abi,
    args: [spender, amount],
  });

export type StandardizedTokenBurnArgs = {
  account: `0x${string}`;
  amount: bigint;
};

/**
 * Factory function for StandardizedToken.burn function args
 */
export const encodeStandardizedTokenBurnArgs = ({
  account,
  amount,
}: StandardizedTokenBurnArgs) => [account, amount] as const;

/**
 * Encoder function for StandardizedToken.burn function data
 */
export const encodeStandardizedTokenBurnData = ({
  account,
  amount,
}: StandardizedTokenBurnArgs) =>
  encodeFunctionData({
    functionName: "burn",
    abi: ABI_FILE.abi,
    args: [account, amount],
  });

export type StandardizedTokenDecreaseAllowanceArgs = {
  spender: `0x${string}`;
  subtractedValue: bigint;
};

/**
 * Factory function for StandardizedToken.decreaseAllowance function args
 */
export const encodeStandardizedTokenDecreaseAllowanceArgs = ({
  spender,
  subtractedValue,
}: StandardizedTokenDecreaseAllowanceArgs) =>
  [spender, subtractedValue] as const;

/**
 * Encoder function for StandardizedToken.decreaseAllowance function data
 */
export const encodeStandardizedTokenDecreaseAllowanceData = ({
  spender,
  subtractedValue,
}: StandardizedTokenDecreaseAllowanceArgs) =>
  encodeFunctionData({
    functionName: "decreaseAllowance",
    abi: ABI_FILE.abi,
    args: [spender, subtractedValue],
  });

export type StandardizedTokenIncreaseAllowanceArgs = {
  spender: `0x${string}`;
  addedValue: bigint;
};

/**
 * Factory function for StandardizedToken.increaseAllowance function args
 */
export const encodeStandardizedTokenIncreaseAllowanceArgs = ({
  spender,
  addedValue,
}: StandardizedTokenIncreaseAllowanceArgs) => [spender, addedValue] as const;

/**
 * Encoder function for StandardizedToken.increaseAllowance function data
 */
export const encodeStandardizedTokenIncreaseAllowanceData = ({
  spender,
  addedValue,
}: StandardizedTokenIncreaseAllowanceArgs) =>
  encodeFunctionData({
    functionName: "increaseAllowance",
    abi: ABI_FILE.abi,
    args: [spender, addedValue],
  });

export type StandardizedTokenInterchainTransferArgs = {
  destinationChain: string;
  recipient: `0x${string}`;
  amount: bigint;
  metadata: `0x${string}`;
};

/**
 * Factory function for StandardizedToken.interchainTransfer function args
 */
export const encodeStandardizedTokenInterchainTransferArgs = ({
  destinationChain,
  recipient,
  amount,
  metadata,
}: StandardizedTokenInterchainTransferArgs) =>
  [destinationChain, recipient, amount, metadata] as const;

/**
 * Encoder function for StandardizedToken.interchainTransfer function data
 */
export const encodeStandardizedTokenInterchainTransferData = ({
  destinationChain,
  recipient,
  amount,
  metadata,
}: StandardizedTokenInterchainTransferArgs) =>
  encodeFunctionData({
    functionName: "interchainTransfer",
    abi: ABI_FILE.abi,
    args: [destinationChain, recipient, amount, metadata],
  });

export type StandardizedTokenInterchainTransferFromArgs = {
  sender: `0x${string}`;
  destinationChain: string;
  recipient: `0x${string}`;
  amount: bigint;
  metadata: `0x${string}`;
};

/**
 * Factory function for StandardizedToken.interchainTransferFrom function args
 */
export const encodeStandardizedTokenInterchainTransferFromArgs = ({
  sender,
  destinationChain,
  recipient,
  amount,
  metadata,
}: StandardizedTokenInterchainTransferFromArgs) =>
  [sender, destinationChain, recipient, amount, metadata] as const;

/**
 * Encoder function for StandardizedToken.interchainTransferFrom function data
 */
export const encodeStandardizedTokenInterchainTransferFromData = ({
  sender,
  destinationChain,
  recipient,
  amount,
  metadata,
}: StandardizedTokenInterchainTransferFromArgs) =>
  encodeFunctionData({
    functionName: "interchainTransferFrom",
    abi: ABI_FILE.abi,
    args: [sender, destinationChain, recipient, amount, metadata],
  });

export type StandardizedTokenMintArgs = {
  account: `0x${string}`;
  amount: bigint;
};

/**
 * Factory function for StandardizedToken.mint function args
 */
export const encodeStandardizedTokenMintArgs = ({
  account,
  amount,
}: StandardizedTokenMintArgs) => [account, amount] as const;

/**
 * Encoder function for StandardizedToken.mint function data
 */
export const encodeStandardizedTokenMintData = ({
  account,
  amount,
}: StandardizedTokenMintArgs) =>
  encodeFunctionData({
    functionName: "mint",
    abi: ABI_FILE.abi,
    args: [account, amount],
  });

export type StandardizedTokenPermitArgs = {
  issuer: `0x${string}`;
  spender: `0x${string}`;
  value: bigint;
  deadline: bigint;
  v: number;
  r: `0x${string}`;
  s: `0x${string}`;
};

/**
 * Factory function for StandardizedToken.permit function args
 */
export const encodeStandardizedTokenPermitArgs = ({
  issuer,
  spender,
  value,
  deadline,
  v,
  r,
  s,
}: StandardizedTokenPermitArgs) =>
  [issuer, spender, value, deadline, v, r, s] as const;

/**
 * Encoder function for StandardizedToken.permit function data
 */
export const encodeStandardizedTokenPermitData = ({
  issuer,
  spender,
  value,
  deadline,
  v,
  r,
  s,
}: StandardizedTokenPermitArgs) =>
  encodeFunctionData({
    functionName: "permit",
    abi: ABI_FILE.abi,
    args: [issuer, spender, value, deadline, v, r, s],
  });

export type StandardizedTokenSetDistributorArgs = { distr: `0x${string}` };

/**
 * Factory function for StandardizedToken.setDistributor function args
 */
export const encodeStandardizedTokenSetDistributorArgs = ({
  distr,
}: StandardizedTokenSetDistributorArgs) => [distr] as const;

/**
 * Encoder function for StandardizedToken.setDistributor function data
 */
export const encodeStandardizedTokenSetDistributorData = ({
  distr,
}: StandardizedTokenSetDistributorArgs) =>
  encodeFunctionData({
    functionName: "setDistributor",
    abi: ABI_FILE.abi,
    args: [distr],
  });

export type StandardizedTokenSetupArgs = { params: `0x${string}` };

/**
 * Factory function for StandardizedToken.setup function args
 */
export const encodeStandardizedTokenSetupArgs = ({
  params,
}: StandardizedTokenSetupArgs) => [params] as const;

/**
 * Encoder function for StandardizedToken.setup function data
 */
export const encodeStandardizedTokenSetupData = ({
  params,
}: StandardizedTokenSetupArgs) =>
  encodeFunctionData({
    functionName: "setup",
    abi: ABI_FILE.abi,
    args: [params],
  });

export type StandardizedTokenTransferArgs = {
  recipient: `0x${string}`;
  amount: bigint;
};

/**
 * Factory function for StandardizedToken.transfer function args
 */
export const encodeStandardizedTokenTransferArgs = ({
  recipient,
  amount,
}: StandardizedTokenTransferArgs) => [recipient, amount] as const;

/**
 * Encoder function for StandardizedToken.transfer function data
 */
export const encodeStandardizedTokenTransferData = ({
  recipient,
  amount,
}: StandardizedTokenTransferArgs) =>
  encodeFunctionData({
    functionName: "transfer",
    abi: ABI_FILE.abi,
    args: [recipient, amount],
  });

export type StandardizedTokenTransferFromArgs = {
  sender: `0x${string}`;
  recipient: `0x${string}`;
  amount: bigint;
};

/**
 * Factory function for StandardizedToken.transferFrom function args
 */
export const encodeStandardizedTokenTransferFromArgs = ({
  sender,
  recipient,
  amount,
}: StandardizedTokenTransferFromArgs) => [sender, recipient, amount] as const;

/**
 * Encoder function for StandardizedToken.transferFrom function data
 */
export const encodeStandardizedTokenTransferFromData = ({
  sender,
  recipient,
  amount,
}: StandardizedTokenTransferFromArgs) =>
  encodeFunctionData({
    functionName: "transferFrom",
    abi: ABI_FILE.abi,
    args: [sender, recipient, amount],
  });
